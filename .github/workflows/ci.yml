name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install dependencies
      working-directory: ./server
      run: npm ci
    
    - name: Run linter
      working-directory: ./server
      run: npm run lint
    
    - name: Run tests
      working-directory: ./server
      run: npm test
      env:
        MONGODB_URI: mongodb://localhost:27017/rezero_test
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        JWT_SECRET: test-secret-key
        NODE_ENV: test

  test-frontend:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install dependencies
      working-directory: ./client
      run: npm ci
    
    - name: Run linter
      working-directory: ./client
      run: npm run lint
    
    - name: Run tests
      working-directory: ./client
      run: npm test
    
    - name: Build
      working-directory: ./client
      run: npm run build

  test-e2e:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          server/package-lock.json
          client/package-lock.json
    
    - name: Install server dependencies
      working-directory: ./server
      run: npm ci
    
    - name: Install client dependencies
      working-directory: ./client
      run: npm ci
    
    - name: Build client
      working-directory: ./client
      run: npm run build
    
    - name: Start server
      working-directory: ./server
      run: npm start &
      env:
        MONGODB_URI: mongodb://localhost:27017/rezero_test
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        JWT_SECRET: test-secret-key
        NODE_ENV: test
        PORT: 4000
    
    - name: Wait for server
      run: npx wait-on http://localhost:4000/health
    
    - name: Run E2E tests
      working-directory: ./client
      run: npm run test:e2e
      env:
        CYPRESS_baseUrl: http://localhost:3000
        CYPRESS_apiUrl: http://localhost:4000

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
